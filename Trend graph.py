import dash
from dash import dcc
from dash import html
from dash.dependencies import Input, Output
import plotly.express as px
import plotly.graph_objects as go
import pandas as pd
import pyodbc as py
#sql server connection
server = 'd2mtrainingdb.database.windows.net'
db = 'd2manalysistraining'
user = 'dbtuser'
pwd = 'Disys@2022'

conn = py.connect('DRIVER={SQL Server};SERVER=' + server +
                      ';DATABASE=' + db +
                      '; UID=' + user +
                      '; PWD=' + pwd +
                      ';Trusted_Connection=no')
cursor = conn.cursor()
# SQL Query and storing data into df
df = pd.read_sql_query('SELECT * FROM borrowed_percentage',conn)
all_Batch =df.category.unique()
app = dash.Dash(__name__)
#dash app
app.layout =html.Div([
        dcc.Checklist(                                       #creating a checklist
            id="checklist",
            options=[{"label": x, "value": x} 
                    for x in all_Batch],
            value=all_Batch[1:],
            labelStyle={'display': 'inline-block'}
        ),
        dcc.Graph(id="line-chart"),
    ])
@app.callback(
    Output("line-chart", "figure"), 
    [Input("checklist", "value")])
    #plotting the graph here we are using Scatter graph for representation
def pushpa(all_Batch):
    mask = df.category.isin(all_Batch)
    fig = px.line(df[mask], 
            x="category", y="book_borrowed_percentage", color='category',text='book_borrowed_percentage',
            title = 'Borrowed books by category', width=1400, height=600 ,template='plotly_dark',color_discrete_sequence=px.colors.qualitative.Pastel)
    fig.update_traces(textposition="top center")
    fig.update_layout( title_x=0.5)

    return fig

app.run_server(debug=True)



































































































































































































































































































































































































































































































